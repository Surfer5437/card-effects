{"ast":null,"code":"import _toConsumableArray from \"/home/livin/react/react-card-effects/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _regeneratorRuntime from \"/home/livin/react/react-card-effects/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/livin/react/react-card-effects/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/home/livin/react/react-card-effects/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/home/livin/react/react-card-effects/src/Deck.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Card from \"./Card\";\nimport axios from \"axios\";\nimport \"./Deck.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar API_BASE_URL = \"https://deckofcardsapi.com/api/deck\";\n/** Deck: uses deck API, allows drawing card at a time. */\n\nfunction Deck() {\n  _s();\n  var _this = this;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    deck = _useState2[0],\n    setDeck = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    drawn = _useState4[0],\n    setDrawn = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isShuffling = _useState6[0],\n    setIsShuffling = _useState6[1];\n  useEffect(function loadDeckFromAPI() {\n    function fetchData() {\n      return _fetchData.apply(this, arguments);\n    }\n    function _fetchData() {\n      _fetchData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var d;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get(\"\".concat(API_BASE_URL, \"/new/shuffle/\"));\n            case 2:\n              d = _context.sent;\n              setDeck(d.data);\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      return _fetchData.apply(this, arguments);\n    }\n    fetchData();\n  }, []);\n\n  /** Draw card: change the state & effect will kick in. */\n  function draw() {\n    return _draw.apply(this, arguments);\n  }\n  /** Shuffle: change the state & effect will kick in. */\n  function _draw() {\n    _draw = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var drawRes, card;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return axios.get(\"\".concat(API_BASE_URL, \"/\").concat(deck.deck_id, \"/draw/\"));\n          case 3:\n            drawRes = _context2.sent;\n            if (!(drawRes.data.remaining === 0)) {\n              _context2.next = 6;\n              break;\n            }\n            throw new Error(\"Deck empty!\");\n          case 6:\n            card = drawRes.data.cards[0];\n            setDrawn(function (d) {\n              return [].concat(_toConsumableArray(d), [{\n                id: card.code,\n                name: card.suit + \" \" + card.value,\n                image: card.image\n              }]);\n            });\n            _context2.next = 13;\n            break;\n          case 10:\n            _context2.prev = 10;\n            _context2.t0 = _context2[\"catch\"](0);\n            alert(_context2.t0);\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2, null, [[0, 10]]);\n    }));\n    return _draw.apply(this, arguments);\n  }\n  function startShuffling() {\n    return _startShuffling.apply(this, arguments);\n  }\n  /** Return draw button (disabled if shuffling) */\n  function _startShuffling() {\n    _startShuffling = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            setIsShuffling(true);\n            _context3.prev = 1;\n            _context3.next = 4;\n            return axios.get(\"\".concat(API_BASE_URL, \"/\").concat(deck.deck_id, \"/shuffle/\"));\n          case 4:\n            setDrawn([]);\n            _context3.next = 10;\n            break;\n          case 7:\n            _context3.prev = 7;\n            _context3.t0 = _context3[\"catch\"](1);\n            alert(_context3.t0);\n          case 10:\n            _context3.prev = 10;\n            setIsShuffling(false);\n            return _context3.finish(10);\n          case 13:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3, null, [[1, 7, 10, 13]]);\n    }));\n    return _startShuffling.apply(this, arguments);\n  }\n  function renderDrawBtnIfOk() {\n    if (!deck) return null;\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Deck-gimme\",\n      onClick: draw,\n      disabled: isShuffling,\n      children: \"DRAW\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n\n  /** Return shuffle button (disabled if already is) */\n  function renderShuffleBtnIfOk() {\n    if (!deck) return null;\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Deck-gimme\",\n      onClick: startShuffling,\n      disabled: isShuffling,\n      children: \"SHUFFLE DECK\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"Deck\",\n    children: [renderDrawBtnIfOk(), renderShuffleBtnIfOk(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Deck-cardarea\",\n      children: drawn.map(function (c) {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          name: c.name,\n          image: c.image\n        }, c.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(Deck, \"rJFNjGw4xcuVBrPVYhrDVDJI900=\");\n_c = Deck;\nexport default Deck;\nvar _c;\n$RefreshReg$(_c, \"Deck\");","map":{"version":3,"names":["React","useEffect","useState","Card","axios","jsxDEV","_jsxDEV","API_BASE_URL","Deck","_s","_this","_useState","_useState2","_slicedToArray","deck","setDeck","_useState3","_useState4","drawn","setDrawn","_useState5","_useState6","isShuffling","setIsShuffling","loadDeckFromAPI","fetchData","_fetchData","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","d","wrap","_callee$","_context","prev","next","get","concat","sent","data","stop","draw","_draw","_callee2","drawRes","card","_callee2$","_context2","deck_id","remaining","Error","cards","_toConsumableArray","id","code","name","suit","value","image","t0","alert","startShuffling","_startShuffling","_callee3","_callee3$","_context3","finish","renderDrawBtnIfOk","className","onClick","disabled","children","fileName","_jsxFileName","lineNumber","columnNumber","renderShuffleBtnIfOk","map","c","_c","$RefreshReg$"],"sources":["/home/livin/react/react-card-effects/src/Deck.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Card from \"./Card\";\nimport axios from \"axios\";\nimport \"./Deck.css\";\n\nconst API_BASE_URL = \"https://deckofcardsapi.com/api/deck\";\n/** Deck: uses deck API, allows drawing card at a time. */\n\nfunction Deck() {\n  const [deck, setDeck] = useState(null);\n  const [drawn, setDrawn] = useState([]);\n  const [isShuffling, setIsShuffling] = useState(false);\n\n  useEffect(function loadDeckFromAPI() {\n    async function fetchData() {\n      const d = await axios.get(`${API_BASE_URL}/new/shuffle/`);\n      setDeck(d.data);\n    }\n    fetchData();\n  }, []);\n\n\n\n  /** Draw card: change the state & effect will kick in. */\n  async function draw() {\n    try {\n      const drawRes = await axios.get(`${API_BASE_URL}/${deck.deck_id}/draw/`);\n\n      if (drawRes.data.remaining === 0) throw new Error(\"Deck empty!\");\n\n      const card = drawRes.data.cards[0];\n\n      setDrawn(d => [\n        ...d,\n        {\n          id: card.code,\n          name: card.suit + \" \" + card.value,\n          image: card.image,\n        },\n      ]);\n    } catch (err) {\n      alert(err);\n    }\n  }\n\n  /** Shuffle: change the state & effect will kick in. */\n  async function startShuffling() {\n    setIsShuffling(true);\n    try {\n      await axios.get(`${API_BASE_URL}/${deck.deck_id}/shuffle/`);\n      setDrawn([]);\n    } catch (err) {\n      alert(err);\n    } finally {\n      setIsShuffling(false);\n    }\n  }\n\n  /** Return draw button (disabled if shuffling) */\n  function renderDrawBtnIfOk() {\n    if (!deck) return null;\n\n    return (\n      <button\n        className=\"Deck-gimme\"\n        onClick={draw}\n        disabled={isShuffling}>\n        DRAW\n      </button>\n    );\n  }\n\n  /** Return shuffle button (disabled if already is) */\n  function renderShuffleBtnIfOk() {\n    if (!deck) return null;\n    return (\n      <button\n        className=\"Deck-gimme\"\n        onClick={startShuffling}\n        disabled={isShuffling}>\n        SHUFFLE DECK\n      </button>\n    );\n  }\n\n  return (\n    <main className=\"Deck\">\n\n      {renderDrawBtnIfOk()}\n      {renderShuffleBtnIfOk()}\n\n      <div className=\"Deck-cardarea\">{\n        drawn.map(c => (\n          <Card key={c.id} name={c.name} image={c.image} />\n        ))}\n      </div>\n\n    </main>\n  );\n}\n\nexport default Deck;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}