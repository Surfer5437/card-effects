{"ast":null,"code":"import _slicedToArray from \"/home/livin/react/react-card-effects/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/home/livin/react/react-card-effects/src/Card.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Card.css\";\n\n/** Single card: just renders the card as received from deck. */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Card(_ref) {\n  _s();\n  var name = _ref.name,\n    image = _ref.image;\n  // get these once; it will never be updated for the same card\n  var _useState = useState({\n      angle: Math.random() * 90 - 45,\n      xPos: Math.random() * 40 - 20,\n      yPos: Math.random() * 40 - 20\n    }),\n    _useState2 = _slicedToArray(_useState, 1),\n    _useState2$ = _useState2[0],\n    angle = _useState2$.angle,\n    xPos = _useState2$.xPos,\n    yPos = _useState2$.yPos;\n  var transform = \"translate(\".concat(xPos, \"px, \").concat(yPos, \"px) rotate(\").concat(angle, \"deg)\");\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    className: \"Card\",\n    alt: name,\n    src: image,\n    style: {\n      transform: transform\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 10\n  }, this);\n}\n_s(Card, \"yIqyiwZF2dvw711QNVUfbRlGcL0=\");\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Card","_ref","_s","name","image","_useState","angle","Math","random","xPos","yPos","_useState2","_slicedToArray","_useState2$","transform","concat","className","alt","src","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/livin/react/react-card-effects/src/Card.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./Card.css\";\n\n/** Single card: just renders the card as received from deck. */\n\nfunction Card({ name, image }) {\n  // get these once; it will never be updated for the same card\n  const [{ angle, xPos, yPos }] = useState({\n    angle: Math.random() * 90 - 45,\n    xPos: Math.random() * 40 - 20,\n    yPos: Math.random() * 40 - 20,\n  });\n\n  const transform = `translate(${xPos}px, ${yPos}px) rotate(${angle}deg)`;\n\n  return <img\n      className=\"Card\"\n      alt={name}\n      src={image}\n      style={{ transform }} />;\n}\n\nexport default Card;\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,YAAY;;AAEnB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,IAAIA,CAAAC,IAAA,EAAkB;EAAAC,EAAA;EAAA,IAAfC,IAAI,GAAAF,IAAA,CAAJE,IAAI;IAAEC,KAAK,GAAAH,IAAA,CAALG,KAAK;EACzB;EACA,IAAAC,SAAA,GAAgCR,QAAQ,CAAC;MACvCS,KAAK,EAAEC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE;MAC9BC,IAAI,EAAEF,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE;MAC7BE,IAAI,EAAEH,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG;IAC7B,CAAC,CAAC;IAAAG,UAAA,GAAAC,cAAA,CAAAP,SAAA;IAAAQ,WAAA,GAAAF,UAAA;IAJOL,KAAK,GAAAO,WAAA,CAALP,KAAK;IAAEG,IAAI,GAAAI,WAAA,CAAJJ,IAAI;IAAEC,IAAI,GAAAG,WAAA,CAAJH,IAAI;EAM1B,IAAMI,SAAS,gBAAAC,MAAA,CAAgBN,IAAI,UAAAM,MAAA,CAAOL,IAAI,iBAAAK,MAAA,CAAcT,KAAK,SAAM;EAEvE,oBAAOP,OAAA;IACHiB,SAAS,EAAC,MAAM;IAChBC,GAAG,EAAEd,IAAK;IACVe,GAAG,EAAEd,KAAM;IACXe,KAAK,EAAE;MAAEL,SAAS,EAATA;IAAU;EAAE;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC9B;AAACrB,EAAA,CAfQF,IAAI;AAAAwB,EAAA,GAAJxB,IAAI;AAiBb,eAAeA,IAAI;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}